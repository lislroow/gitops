services:
  elastic-certs:
    container_name: elastic-certs
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    restart: no
    volumes:
      - elastic_certs:/usr/share/elasticsearch/config/certs
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: elastic\n"\
          "    dns:\n"\
          "      - elastic\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 755 \{\} \;;
        find . -type f -exec chmod 644 \{\} \;;
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/elastic/elastic.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    user: "0"


  elastic:
    container_name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    restart: unless-stopped
    depends_on:
      elastic-certs:
        condition: service_healthy
    ports:
      - 9200:9200
    volumes:
      - elastic_certs:/usr/share/elasticsearch/config/certs
      - elastic_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - node.name=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/elastic/elastic.key
      - xpack.security.http.ssl.certificate=certs/elastic/elastic.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/elastic/elastic.key
      - xpack.security.transport.ssl.certificate=certs/elastic/elastic.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt -u \"elastic:${ELASTIC_PASSWORD}\" https://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    ulimits:
      memlock:
        soft: -1
        hard: -1


  elastic-users:
    container_name: elastic-users
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    restart: no
    depends_on:
      elastic:
        condition: service_healthy
    volumes:
      - elastic_certs:/usr/share/elasticsearch/config/certs
    command: >
      bash -c '
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" https://elastic:9200/_cluster/health | grep -q "\"status\":\"green\"\\|\"status\":\"yellow\""; do echo "Waiting for Elasticsearch availability -> " $((idx++)); sleep 1; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" https://elastic:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 3; done;
        echo "All done!";
      '
    user: "0"


  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.14.3
    restart: unless-stopped
    depends_on:
      elastic:
        condition: service_healthy
    ports:
      - 5601:5601
    volumes:
      - elastic_certs:/usr/share/kibana/config/certs
      - kibana_data:/usr/share/kibana/data
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elastic:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

volumes:
  elastic_certs:
  elastic_data:
  kibana_data:
