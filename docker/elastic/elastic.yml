services:
  elastic:
    container_name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - node.name=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=basic
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -u \"elastic:${ELASTIC_PASSWORD}\" http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - elastic-net


  elastic-users:
    container_name: elastic-users
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    depends_on:
      elastic:
        condition: service_healthy
    restart: none
    user: "0"
    command: >
      bash -c '
        echo "Waiting for Elasticsearch availability";
        until curl -s -u "elastic:${ELASTIC_PASSWORD}" http://elastic:9200/_cluster/health | grep -q "\"status\":\"green\"\\|\"status\":\"yellow\""; do echo "Waiting for Elasticsearch availability -> " $((idx++)); sleep 1; done;
        echo "Setting kibana_system password";
        until curl -s -X POST -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" http://elastic:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 3; done;
        echo "All done!";
      '
    networks:
      - elastic-net


  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.14.3
    depends_on:
      elastic:
        condition: service_healthy
    volumes:
      - kibana_data:/usr/share/kibana/data
    ports:
      - 5601:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elastic:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - elastic-net

volumes:
  elastic_data:
  kibana_data:

networks:
  elastic-net:
    driver: bridge
