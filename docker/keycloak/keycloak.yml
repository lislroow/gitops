services:
  keycloak-postgres:
    container_name: keycloak-postgres
    image: postgres:14.18
    restart: unless-stopped
    volumes:
      - ./initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${postgres_db}
      POSTGRES_USER: ${postgres_user}
      POSTGRES_PASSWORD: ${postgres_password}
      keycloak_postgres_db: ${keycloak_postgres_db}
      keycloak_postgres_user: ${keycloak_postgres_user}
      keycloak_postgres_password: ${keycloak_postgres_password}
    healthcheck:
      test: >
        pg_isready -U ${postgres_user} -d ${postgres_db} && 
        pg_isready -U ${keycloak_postgres_user} -d ${keycloak_postgres_db}
      interval: 10s
      timeout: 3s
      retries: 5

  keycloak:
    container_name: keycloak
    image: keycloak/keycloak:26.0
    restart: unless-stopped
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    ports:
      - 8084:8080
    volumes:
      - keycloak_data:/opt/keycloak/data
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-postgres
      KC_DB_URL_DATABASE: ${keycloak_postgres_db}
      KC_DB_USERNAME: ${keycloak_postgres_user}
      KC_DB_PASSWORD: ${keycloak_postgres_password}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${kc_bootstrap_admin_username}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${kc_bootstrap_admin_password}
    command: start-dev

volumes:
  postgres_data:
  keycloak_data:
